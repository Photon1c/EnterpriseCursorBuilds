:root {
    --primary-color: #f64c72;
    --secondary-color: #553d67;
    --background-color: #2f2fa2;
    --light-color: #f8f8f8;
    --dark-color: #242582;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Courier New', Courier, monospace;
    color: var(--light-color);
}

body {
    overflow: hidden;
    background-color: #333;
}

#container {
    /* Old container style - removed or commented out */
    /*
    position: relative;
    width: 100vw;
    height: 100vh;
    */
}

/* New styles for simulation wrappers */
.simulation-wrapper {
    position: relative;
    width: 100%;
    height: 50vh; /* Each simulation takes half the viewport height */
    border-bottom: 2px solid var(--primary-color);
    overflow: hidden;
}

.simulation-wrapper:last-child {
    border-bottom: none;
}

.simulation-wrapper h2 {
    position: absolute;
    top: 10px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 20;
    background-color: rgba(0, 0, 0, 0.7);
    padding: 5px 15px;
    border-radius: 5px;
    color: var(--light-color);
    pointer-events: none;
    font-size: 1rem; /* Smaller font size */
}

.container {
    position: relative;
    width: 100%;
    height: 100%;
    z-index: 1;
}

canvas {
    display: block;
    width: 100%;
    height: 100%;
    pointer-events: auto; /* Change to auto so Three.js controls work */
}

#ui-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

#controls {
    /* Old style for single controls - replaced by class */
    /*
    position: absolute;
    top: 20px;
    left: 20px;
    background-color: rgba(0, 0, 0, 0.6);
    padding: 15px;
    border-radius: 8px;
    border: 2px solid var(--primary-color);
    pointer-events: auto;
    */
}

/* New style for controls using class */
.controls {
    position: absolute;
    top: 20px;
    left: 20px;
    background-color: rgba(0, 0, 0, 0.8);
    padding: 15px;
    border-radius: 8px;
    border: 2px solid var(--primary-color);
    pointer-events: auto;
    z-index: 30; /* Increased z-index */
    max-height: 80%;
    overflow-y: auto; /* Allow scrolling if many controls */
    cursor: move; /* Indicate draggable */
    resize: both; /* Make resizable */
    overflow: auto;
    min-width: 280px;
    min-height: 200px;
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.6);
}

.controls-header {
    display: flex;
    justify-content: space-between;
    margin-bottom: 15px;
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
    padding-bottom: 8px;
    cursor: move;
}

.controls-title {
    font-weight: bold;
    color: var(--primary-color);
    font-size: 1.1em;
}

.controls-actions {
    display: flex;
    gap: 8px;
}

.controls-action {
    background: none;
    border: none;
    color: rgba(255, 255, 255, 0.5);
    cursor: pointer;
    width: auto;
    margin: 0;
    padding: 0;
    font-size: 1.2em;
}

.controls-action:hover {
    color: var(--primary-color);
    background: none;
}

button {
    background-color: var(--primary-color);
    color: white;
    border: none;
    padding: 8px 16px;
    margin-right: 10px;
    border-radius: 4px;
    cursor: pointer;
    font-weight: bold;
    transition: background-color 0.3s;
    width: 150px;
}

button:hover {
    background-color: #d43d60;
}

button:disabled {
    background-color: #888;
    cursor: not-allowed;
}

.slider-container {
    margin-top: 10px;
    display: flex;
    align-items: center;
    flex-wrap: wrap; /* Allow wrapping on small screens */
    position: relative;
    padding: 2px 0;
}

.slider-container:hover {
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 4px;
}

.slider-container label {
    margin-right: 10px;
    color: var(--light-color);
    min-width: 120px; /* Consistent width for labels */
    font-size: 0.9em;
}

input[type="range"] {
    width: 150px;
    margin-right: 8px;
    accent-color: var(--primary-color);
}

.slider-container span {
    min-width: 30px;
    text-align: right;
    background-color: rgba(0, 0, 0, 0.3);
    padding: 2px 6px;
    border-radius: 3px;
    font-size: 0.9em;
}

#stats {
    /* Old style for single stats - replaced by class */
    /*
    position: absolute;
    top: 20px;
    right: 20px;
    background-color: rgba(0, 0, 0, 0.6);
    padding: 15px;
    border-radius: 8px;
    border: 2px solid var(--secondary-color);
    pointer-events: auto;
    */
}

/* New style for stats using class */
.stats {
    position: absolute;
    top: 20px;
    right: 20px;
    background-color: rgba(0, 0, 0, 0.6);
    padding: 15px;
    border-radius: 8px;
    border: 2px solid var(--secondary-color);
    pointer-events: auto;
    z-index: 30; /* Increased z-index */
}

#stats div {
    margin-bottom: 5px;
    min-width: 300px;
    pointer-events: auto;
}

/* New style for task inspector using class */
.task-inspector {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: rgba(0, 0, 0, 0.8);
    padding: 20px;
    border-radius: 8px;
    border: 2px solid var(--primary-color);
    min-width: 300px;
    pointer-events: auto;
    z-index: 25;
}

#task-inspector h3 {
    margin-bottom: 15px;
    color: var(--primary-color);
    text-align: center;
    opacity: 0.3;
}

#task-details {
    margin-bottom: 15px;
}

#close-inspector {
    display: block;
    margin: 0 auto;
}

.hidden {
    display: none !important; /* Ensure hidden class overrides other display properties */
}

/* Retro factory styling touches */
#ui-overlay::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
        repeating-linear-gradient(
            45deg,
            rgba(0, 0, 0, 0.1),
            rgba(0, 0, 0, 0.1) 10px,
            rgba(0, 0, 0, 0) 10px,
            rgba(0, 0, 0, 0) 20px
        );
    pointer-events: none;
}

/* Add slight scanlines for retro CRT effect */
#ui-overlay::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
        linear-gradient(
            transparent 0%, 
            rgba(50, 50, 50, 0.05) 50%, 
            transparent 100%
        );
    background-size: 100% 4px;
    pointer-events: none;
    z-index: 2;
    opacity: 0.3;
}

/* Basic style for summary box */
.summary {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: rgba(0, 0, 0, 0.8);
    padding: 20px;
    border-radius: 8px;
    border: 2px solid var(--secondary-color);
    text-align: center;
    pointer-events: auto;
    z-index: 25;
    min-width: 300px;
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.2);
}

.summary-title {
    color: var(--primary-color);
    display: block;
    margin-bottom: 15px;
    font-size: 1.4em;
    text-transform: uppercase;
    letter-spacing: 1px;
    border-bottom: 1px solid var(--secondary-color);
    padding-bottom: 8px;
}

.summary-metrics {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin-bottom: 15px;
}

.summary-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 0.9em;
}

.summary-value {
    font-weight: bold;
    color: var(--secondary-color);
}

.performance-rating {
    margin-top: 5px;
    font-weight: bold;
    justify-content: center;
    gap: 10px;
}

.rating-excellent {
    color: #4CAF50;
}

.rating-good {
    color: #8BC34A;
}

.rating-average {
    color: #FFC107;
}

.rating-poor {
    color: #F44336;
}

.bonus-indicator {
    display: block;
    margin-top: 10px;
    color: #FFD700;
    font-weight: bold;
    font-size: 1.1em;
    text-shadow: 0 0 5px rgba(255, 215, 0, 0.5);
    animation: bonusPulse 1.5s infinite;
}

.summary-close-btn {
    background-color: var(--secondary-color);
    color: black;
    border: none;
    padding: 8px 15px;
    border-radius: 4px;
    cursor: pointer;
    font-weight: bold;
    margin-top: 10px;
    transition: all 0.2s ease;
}

.summary-close-btn:hover {
    background-color: var(--primary-color);
    transform: scale(1.05);
}

/* Animation for summary display */
.summary-animate {
    animation: summaryPulse 1s ease-in-out;
}

@keyframes summaryPulse {
    0% { transform: translate(-50%, -50%) scale(0.8); opacity: 0; }
    50% { transform: translate(-50%, -50%) scale(1.1); opacity: 1; }
    100% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
}

@keyframes bonusPulse {
    0% { opacity: 1; }
    50% { opacity: 0.7; }
    100% { opacity: 1; }
}

/* Stats indicators */
.stat-warning {
    color: #FFA500;
    font-weight: bold;
    animation: statWarningPulse 2s infinite;
}

.stat-danger {
    color: #FF0000;
    font-weight: bold;
    animation: statDangerPulse 1s infinite;
}

@keyframes statWarningPulse {
    0% { opacity: 1; }
    50% { opacity: 0.7; }
    100% { opacity: 1; }
}

@keyframes statDangerPulse {
    0% { opacity: 1; text-shadow: 0 0 3px rgba(255, 0, 0, 0.5); }
    50% { opacity: 0.8; text-shadow: 0 0 8px rgba(255, 0, 0, 0.8); }
    100% { opacity: 1; text-shadow: 0 0 3px rgba(255, 0, 0, 0.5); }
}

/* Animation for spilled chocolates */
@keyframes spillBounce {
    0% { transform: translateY(0) rotate(0); opacity: 0; }
    20% { transform: translateY(-20px) rotate(90deg); opacity: 1; }
    40% { transform: translateY(10px) rotate(180deg); opacity: 0.8; }
    60% { transform: translateY(-5px) rotate(270deg); opacity: 0.8; }
    80% { transform: translateY(2px) rotate(330deg); opacity: 0.7; }
    100% { transform: translateY(0) rotate(360deg); opacity: 0.6; }
}

/* Animation for supervisor intervention */
@keyframes interventionPulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.2); }
    100% { transform: scale(1); }
}

/* Styles for the new stats */
#expectation-spilled-count, #reality-spilled-count {
    color: #FF5722; /* Orange for spilled count */
    font-weight: bold;
}

/* Responsive adjustments for smaller screens */
@media (max-width: 768px) {
    .simulation-wrapper {
        height: 60vh; /* Taller on mobile */
    }
    
    .controls, .stats {
        padding: 10px;
        max-width: 45%;
        font-size: 0.9rem;
    }
    
    .slider-container label {
        min-width: 90px;
    }
    
    input[type="range"] {
        width: 100px;
    }
    
    .slider-container {
        margin-top: 5px;
    }
    
    button {
        padding: 6px 12px;
        width: 120px;
        font-size: 0.9rem;
    }
}

/* Tooltip styles for parameters - improved */
.slider-container label {
    position: relative;
    cursor: help;
}

.slider-container label::after {
    content: attr(data-tooltip);
    position: absolute;
    top: -40px;
    left: 0;
    background-color: rgba(0, 0, 0, 0.9);
    color: white;
    padding: 8px 12px;
    border-radius: 4px;
    font-size: 0.85rem;
    white-space: nowrap;
    z-index: 100;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.2s, visibility 0.2s;
    pointer-events: none;
    max-width: 250px;
    text-align: left;
}

.slider-container label:hover::after {
    opacity: 1;
    visibility: visible;
}

/* Add shine effect to chocolates */
.chocolate-shine {
    position: absolute;
    width: 100%;
    height: 100%;
    background: radial-gradient(
        circle at 30% 30%,
        rgba(255, 255, 255, 0.5) 0%,
        rgba(255, 255, 255, 0) 50%
    );
    pointer-events: none;
    z-index: 1;
}

/* Spill splatter marks */
.spill-mark {
    position: absolute;
    background-color: #3c2414;
    border-radius: 50%;
    opacity: 0.7;
    transform: scale(0);
    animation: splatterAppear 0.5s forwards;
}

@keyframes splatterAppear {
    0% { transform: scale(0); opacity: 0; }
    50% { transform: scale(1.2); opacity: 0.8; }
    100% { transform: scale(1); opacity: 0.7; }
}

/* Chocolate splash droplets */
.chocolate-splash {
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: #5a3921;
    border-radius: 50%;
    animation: splashFly 1s ease-out forwards;
}

@keyframes splashFly {
    0% { transform: translate(0, 0) scale(0.5); opacity: 0.8; }
    100% { transform: translate(var(--splash-x, 50px), var(--splash-y, -30px)) scale(0.1); opacity: 0; }
}

/* Controls panel styles - make more compact */
.controls-panel {
    background-color: rgba(0, 0, 0, 0.7);
    border: 1px solid var(--secondary-color);
    border-radius: 8px;
    color: white;
    width: 250px;
    font-size: 0.85rem;
    max-height: 320px;
    overflow-y: auto;
    padding: 5px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    z-index: 10;
}

.controls-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 5px;
    border-bottom: 1px solid var(--secondary-color);
    cursor: move;
    user-select: none;
    margin-bottom: 8px;
}

.controls-header h2 {
    margin: 0;
    font-size: 1rem;
    color: var(--primary-color);
}

.controls-section {
    margin-bottom: 8px;
    padding: 5px;
    border-bottom: 1px dotted rgba(255, 255, 255, 0.2);
}

.controls-section h3 {
    font-size: 0.9rem;
    margin: 0 0 5px 0;
    color: var(--secondary-color);
}

.controls-group {
    margin-bottom: 6px;
}

.controls-group label {
    display: block;
    font-size: 0.8rem;
    margin-bottom: 3px;
    color: #ddd;
}

/* Button styles */
.controls-button {
    background-color: var(--secondary-color);
    color: black;
    border: none;
    border-radius: 3px;
    padding: 4px 8px;
    margin-right: 4px;
    font-size: 0.75rem;
    cursor: pointer;
    transition: background-color 0.2s;
}

.controls-button:hover {
    background-color: var(--primary-color);
}

.controls-button:disabled {
    background-color: #555;
    color: #888;
    cursor: not-allowed;
}

/* Slider styles */
.slider-container {
    display: flex;
    align-items: center;
    gap: 8px;
}

.slider-container input[type="range"] {
    flex: 1;
    height: 5px;
}

.slider-value {
    font-size: 0.75rem;
    color: var(--secondary-color);
    width: 25px;
    text-align: right;
}

/* Panel controls */
.minimize-button {
    background: none;
    border: 1px solid var(--secondary-color);
    color: var(--secondary-color);
    width: 20px;
    height: 20px;
    border-radius: 3px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    font-size: 0.75rem;
    padding: 0;
    line-height: 1;
}

.minimize-button:hover {
    background-color: rgba(255, 255, 255, 0.1);
}

/* Toggle Controls button - make more prominent */
.toggle-controls-button {
    position: absolute; /* Change from fixed to absolute for proper container positioning */
    top: 15px;
    width: 40px;
    height: 40px;
    background-color: var(--secondary-color);
    color: black;
    border: 2px solid black;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 20; /* Ensure it's above other elements */
    box-shadow: 0 3px 8px rgba(0, 0, 0, 0.5);
    font-size: 1.5rem;
    font-weight: bold;
    padding: 0;
    line-height: 1;
    transition: all 0.2s ease;
}

.toggle-controls-button:hover {
    background-color: var(--primary-color);
    transform: scale(1.1);
}

.toggle-controls-button.left {
    left: 15px;
}

.toggle-controls-button.right {
    right: 15px;
}

/* Add a pulsing animation to make the buttons more noticeable initially */
@keyframes buttonPulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

.toggle-controls-button {
    animation: buttonPulse 2s infinite;
}

.toggle-controls-button:hover {
    animation: none;
}

/* Add tooltips for controls */
[data-tooltip] {
    position: relative;
}

[data-tooltip]:after {
    content: attr(data-tooltip);
    position: absolute;
    bottom: 130%;
    left: 50%;
    transform: translateX(-50%);
    background-color: #333;
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 0.7rem;
    white-space: nowrap;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.2s;
    z-index: 20;
}

[data-tooltip]:hover:after {
    opacity: 1;
}

/* Standalone show controls buttons */
.show-controls-button {
    position: absolute;
    top: 10px;
    left: 10px;
    width: 28px;
    height: 28px;
    background-color: rgba(85, 61, 103, 0.9); /* More opaque for visibility */
    color: white;
    border: 1px solid black;
    border-radius: 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 50; /* Higher z-index to ensure visibility */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.7);
    font-size: 1rem;
    transition: all 0.2s ease;
    padding: 0;
}

.show-controls-button:hover {
    background-color: var(--primary-color);
    transform: scale(1.05);
}

#expectation-controls, #reality-controls {
    background-color: rgba(34, 34, 51, 0.95); /* Dark background with transparency */
    color: #FFFFFF; /* Bright white text */
    border: 2px solid var(--primary-color);
    border-radius: 8px;
    padding: 15px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.8);
    z-index: 30;
    max-height: 80%;
    overflow-y: auto;
    cursor: move;
    resize: both;
    overflow: auto;
    min-width: 280px;
    min-height: 200px;
}

/* Style child elements in the controls */
#expectation-controls label, #reality-controls label, 
#expectation-controls h3, #reality-controls h3,
#expectation-controls .controls-title, #reality-controls .controls-title {
    color: #FFFFFF; /* Bright white text */
}

/* Style buttons in the controls */
#expectation-controls button, #reality-controls button {
    background-color: var(--primary-color);
    color: white;
    border: none;
    padding: 6px 12px;
    margin: 5px;
    border-radius: 4px;
    cursor: pointer;
    font-weight: bold;
    transition: background-color 0.3s;
    font-size: 0.8rem;
}

#expectation-controls button:hover, #reality-controls button:hover {
    background-color: #d43d60; /* Darker shade for hover */
}

/* Style sliders */
#expectation-controls input[type="range"], #reality-controls input[type="range"] {
    accent-color: var(--primary-color);
}

/* Make slider text smaller and ensure visibility */
#expectation-controls .slider-container, 
#reality-controls .slider-container {
    margin-bottom: 5px;
    font-size: 0.75rem;
    word-wrap: break-word;
    overflow-wrap: break-word;
    white-space: normal;
}

#expectation-controls label, 
#reality-controls label {
    font-size: 0.75rem;
    min-width: 75px;
    display: inline-block;
    word-wrap: break-word;
    white-space: normal;
    margin-right: 3px;
    font-weight: bold; /* Make labels more legible */
}

#expectation-controls input[type="range"], 
#reality-controls input[type="range"] {
    width: 70px;
    vertical-align: middle;
}

/* Ensure overflow text is handled properly in the controls */
.controls-section {
    margin-bottom: 8px;
    word-wrap: break-word;
    overflow-wrap: break-word;
    padding-bottom: 3px;
    border-bottom: 1px dotted rgba(255, 255, 255, 0.2);
}

.controls-section h3 {
    font-size: 0.85rem;
    margin: 3px 0;
    color: var(--primary-color); /* Make headers more visible */
}

.controls-button {
    font-size: 0.75rem;
    padding: 3px 6px;
    margin: 3px 0;
    font-weight: bold; /* Make button text more legible */
}

/* Make controls persistent */
.controls-header .controls-action {
    font-size: 1.2rem;
    font-weight: bold;
    color: var(--primary-color);
}

/* Fix button sizes to be more compact */
#expectation-start-button, #expectation-pause-button,
#reality-start-button, #reality-pause-button {
    width: auto;
    min-width: 80px;
    padding: 5px 8px;
    margin-right: 5px;
    margin-bottom: 5px;
    font-size: 0.8rem;
}

/* Reduce padding in control panels */
#expectation-controls > div, 
#reality-controls > div {
    padding: 3px 0;
} 